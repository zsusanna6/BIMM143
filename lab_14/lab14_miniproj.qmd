---
title: "lab14_miniProj"
author: "Longmei Zhang A17012012"
format: pdf
---

## Data import
```{r}
metadata <- read.csv("GSE37704_metadata.csv", row.names = 1)
countdata <- read.csv("GSE37704_featurecounts.csv", row.names = 1)

```

```{r}
head(metadata)
```

## DESeq setup

> Q. Complete the code below to remove the troublesome first column from countData

```{r}
if (ncol(countdata) > 6) {
    countdata <- as.matrix(countdata[,-1])
}
head(countdata)
```
> Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}

countdata <- countdata[rowSums(countdata) != 0 ,]
head(countdata)
```


## DEseq Analysis

```{r}
#| message: false
library(DESeq2)
```

```{r}
dds <- DESeqDataSetFromMatrix(countData = countdata,
                              colData = metadata,
                              design = ~condition)

dds = DESeq(dds)
```
```{r}

resultsNames(dds)
```
get results for the HoxA1 knockdown versus control siRNA 
```{r}
res <- results(dds, contrast = c("condition", "hoxa1_kd", "control_sirna"))

```
> Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```



## Result Visualization

```{r}
plot(res$log2FoldChange, -log(res$padj))

```
> Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj<0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

## Add annotation

> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library(AnnotationDbi)
library(org.Hs.eg.db)

columns(org.Hs.eg.db)
```

```{r}
res$symbol <- mapIds(org.Hs.eg.db, 
                     keys = row.names(res),
                     keytype = "ENSEMBL",
                     column = "SYMBOL",
                     multiVals="first")

res$entrez <- mapIds(org.Hs.eg.db, 
                     keys = row.names(res),
                     keytype = "ENSEMBL",
                     colum = "ENTREZID",
                     multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```
> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

## Pathway Analysis

```{r}
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs) 
data(sigmet.idx.hs)

kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs] 
#signaling and metabolic pathways only

```

```{r}
# examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
# need to create a named vector of fold change with ENTREZ id

foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
```
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```
```{r}
# look at the down regulated pathways
head(keggres$less)
```
```{r}
#visualize the first down regulated pathway

pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![Down Regulated Cell Cycle Pathway](hsa04110.pathview.png)
```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

Visualize the top 5 up regulated pathway. Get the KEGG pathway ID

```{r}
## Focus on top 5 upregulated pathways 
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```
```{r}
keggrespathways
```

![Hematopoietic cell lineage](hsa04640.pathview.png)
![Jak-STAT signaling pathway](hsa04630.pathview.png)
![Steroid hormone biosynthesis](hsa00140.pathview.png)

![Lysosome](hsa04142.pathview.png)

![Notch signaling pathwa](hsa04330.pathview.png)

> Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
downkregg <- row.names(keggres$less[1:5,])
downids <- substr(downkregg, start = 1, stop = 8)

pathview(gene.data = foldchanges, pathway.id = downids, species = "hsa")
```
```{r}
downkregg
```
![DNA replication](hsa03030.pathview.png)

![RNA transport](hsa03013.pathview.png)

![Homologous recombination](hsa03440.pathview.png)

![Oocyte meiosis](hsa04114.pathview.png)


##Gene Ontology
Gene ontology is use to compare the differentially expressed genes against the entire gene dataset to identify which GO (ie. biological proccesses, molecular functions, and cellular component) are overrepresented. can be used to find processes affected in diseased vs. healthy conditions.
go.subs.hs has all GO terms and is a named list containing indexes for the BP, CC, and MF ontologies. Let’s focus on BP (a.k.a Biological Process) here.
 
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```
 
##Reactome Analysis

Reactome is database consisting of biological molecules and their relation to pathways and processes. Let's now conduct over-representation enrichment analysis and pathway-topology analysis with Reactome using the previous list of significant genes generated from our differential expression results above.

```{r}
#list the number of significant genes

sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```
```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

The pathway with the most significant Entities p-value is Cell Cycle mitosis. The most significant pathway listed in the KEGG result is cell cycle, which matches with the result from reactome. The difference in statistic values might be cause by differences in the database and differences in the model used to calculate the statistics. 

```{r}
head(keggres$less, 5)

```



## Save Results


